@using ProductDataAccess.DTOs;
@model ProductDTO
@{
    ViewData["PageTitle"] = "Add New Product";
    ViewData["Producs"] = "active";
    ViewData["SearchURL"] = "AdminProduct";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<main class="main-content position-relative border-radius-lg">
    @Html.Partial("~/Views/Shared/_AdminNavbar.cshtml")
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-header">
                        <h5 class="mb-0">Add New Product</h5>
                        <p class="text-sm text-muted">Fill out the details below to add a new product</p>
                    </div>
                    <div class="card-body">
                        <form method="post" enctype="multipart/form-data">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <!-- Product Name -->
                            <div class="mb-3">
                                <label for="ProductName" class="form-label">Product Name</label>
                                <input type="text" class="form-control" id="ProductName" name="ProductName" value="" required />
                                @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                            </div>

                            <!-- Category -->
                            <div class="mb-3">
                                <label for="CategoryId" class="form-label">Category</label>
                                <select class="form-select" id="CategoryId" name="CategoryId" required>
                                    <option value="">Select Category</option>

                                        @foreach (var category in (List<CategoryDTO>)ViewData["Categories"])
                                        {
                                            <option value="@category.CategoryId">@category.CategoryName</option>
                                        }
              

                                </select>
                            </div>

                          @*    <!-- Brand -->
                             <div class="mb-3">
                                 <label for="BrandName" class="form-label">Brand</label>
                                 <input type="text" class="form-control" id="BrandName" name="BrandName" value="@Model.BrandName" required />
                             </div> *@

                            <!-- Price -->
                            <div class="mb-3">
                                <label for="Price" class="form-label">Price ($)</label>
                                <input type="number" class="form-control" id="Price" name="Price" value="" required />
                                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                            </div>

                            <!-- Stock -->
                            <div class="mb-3">
                                <label for="Stock" class="form-label">Stock</label>
                                <input type="number" class="form-control" id="Stock" name="Stock" value="" required />
                                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                            </div>

                           @*   <!-- Description -->
                             <div class="mb-3">
                                 <label for="Description" class="form-label">Product Description</label>
                                 <textarea class="form-control" id="Description" name="Description" rows="4">@Model.Description</textarea>
                             </div> *@

                            <!-- Product Image -->
                            <div class="mb-3">
                                <label for="ProductImage" class="form-label">Product Image</label>
                                <input type="file" class="form-control" id="productImage" name="productImage" required/>
                            </div>

                            <!-- Status  -->
                            <input hidden type="radio" id="InStock" checked name="IsDeleted" value="false" />

                            <div class="d-flex justify-content-end">
                                <button type="submit" class="btn btn-success">Add Product</button>
                                <a href="@Url.Action("Index", "AdminProduct")" class="btn btn-secondary ms-3">Cancel</a>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
@section scripts {
    <script>
        if ('@ViewBag.Message' == "Success") {
            Swal.fire({
                title: 'Success!',
                text: 'Product is added',
                icon: 'success',
                confirmButtonText: 'Ok'
            })
        }
    </script>
}