@using ProductDataAccess.Models.Response;
@using ProductDataAccess.DTOs;
@model PagedResult<ProductDTO>
@{
    ViewData["PageTitle"] = "Products";
    ViewData["Products"] = "active";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<main class="main-content position-relative border-radius-lg">
    @Html.Partial("~/Views/Shared/_AdminNavbar.cshtml")
    <div class="container-fluid py-4">
        <div class="row">
            <div class="col-12">
                <div class="card mb-4">
                    <div class="card-header pb-0 d-flex justify-content-between align-items-center">
                        <h6>Product List</h6>
                        <p>Total @Model.TotalRecords products</p>

                        <div class="d-flex justify-content-end">
                            <a href="@Url.Action("Create", "AdminProduct")" class="btn btn-primary">Add New Product</a>
                        </div>
                    </div>
                    <div class="card-body px-0 pt-0 pb-2">
                        <div class="table-responsive p-0">
                            <table class="table align-items-center mb-0">
                                <thead>
                                    <tr>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">ProductId</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Product</th>
                                        <th class="text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Stock</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7 ps-2">Price($)</th>
                                        <th class="text-center text-uppercase text-secondary text-xxs font-weight-bolder opacity-7">Status</th>
                                        <th class="text-secondary opacity-7"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.Items)
                                    {
                                        <tr>
                                            <td class="text-center">
                                                <span class="text-secondary text-xs font-weight-bold">#@item.ProductId</span>
                                            </td>
                                            <td>
                                                <div class="d-flex px-2 py-1">
                                                    <div>
                                                        <img src="/assets/images/products/@item.ImgName" class="avatar avatar-sm me-3" alt="user1">
                                                    </div>
                                                    <div class="d-flex flex-column justify-content-center">
                                                        <h6 class="mb-0 text-sm">@item.ProductName</h6>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <p class="text-xs text-secondary mb-0">@item.Stock</p>
                                            </td>
                                            <td class="align-middle text-center text-sm">
                                                <span class="text-secondary text-xs font-weight-bold">@item.Price.ToString("N0")</span>
                                            </td>
                                            <td class="align-middle text-center text-sm">
                                                <span class="badge badge-sm
                        @(item.IsDeleted == false ? "bg-gradient-success" :
                         "bg-gradient-danger")">
                                                    @(item.IsDeleted == true ? "Deleted" : "Available")
                                                </span>
                                            </td>
                                            <td class="align-middle text-center">
                                                <a href="@Url.Action("Detail", "AdminProduct", new {id = item.ProductId})" class="btn btn-sm btn-info mb-0 d-none d-lg-block">View</a>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                        <!-- Pagination controls -->
                        <nav aria-label="Page navigation">
                            <ul class="pagination justify-content-center mt-3">
                                @if (Model.HasPreviousPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(Model.PageNumber - 1)" aria-label="Previous">
                                            <span aria-hidden="true">&laquo;</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">&laquo;</span>
                                    </li>
                                }

                                @for (int i = 1; i <= Model.TotalPages; i++)
                                {
                                    <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                                        <a class="page-link" href="?page=@i">@i</a>
                                    </li>
                                }

                                @if (Model.HasNextPage)
                                {
                                    <li class="page-item">
                                        <a class="page-link" href="?page=@(Model.PageNumber + 1)" aria-label="Next">
                                            <span aria-hidden="true">&raquo;</span>
                                        </a>
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item disabled">
                                        <span class="page-link">&raquo;</span>
                                    </li>
                                }
                            </ul>
                        </nav>

                    </div>
                </div>
            </div>
        </div>
    </div>
</main>
