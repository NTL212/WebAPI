<!-- Modal -->
<div class="modal fade" id="productSelectionModal" tabindex="-1" aria-labelledby="productSelectionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="productSelectionModalLabel">Select Product for Voucher</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <!-- Search bar -->
                <input type="text" class="form-control mb-3" id="productSearch" placeholder="Search for a product" aria-label="Search for a product">

                <!-- Product list with pagination -->
                <div class="table-responsive">
                    <table class="table align-items-center mb-0" id="productTable">
                        <thead>
                            <tr>
                                <th class="text-center">Product ID</th>
                                <th>Product</th>
                                <th class="text-center">Price($)</th>
                                <th class="text-center">Stock</th>
                                <th class="text-center">Select</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- Product rows will be injected here dynamically -->
                        </tbody>
                    </table>
                </div>

                <!-- Pagination controls -->
                <nav aria-label="Page navigation" class="mt-3">
                    <ul class="pagination justify-content-center" id="paginationControls"></ul>
                </nav>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="confirmSelection">Confirm Selection</button>
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script>
        $(document).ready(function () {
            let products = @Html.Raw(Json.Serialize(@Model.Products)); // Lấy danh sách sản phẩm từ Model
            let currentPage = 1;
            const itemsPerPage = 5;
            let selectedProducts = [];

            // Hàm hiển thị sản phẩm theo trang
            function renderProducts() {
                var search = $("#productSearch").val();
                if (search != null) {
                    search = search.toLowerCase();
                }
                let filteredProducts = products.filter(product =>
                    product.productName.toLowerCase().includes(search));

                let startIndex = (currentPage - 1) * itemsPerPage;
                let endIndex = Math.min(startIndex + itemsPerPage, filteredProducts.length);
                let paginatedProducts = filteredProducts.slice(startIndex, endIndex);

                let tbody = $("#productTable tbody");
                tbody.empty(); // Xóa dữ liệu cũ trước khi render lại

                // Render danh sách sản phẩm
                paginatedProducts.forEach(product => {
                    tbody.append(`
                                                            <tr data-product-id="${product.productId}">
                                                    <td class="text-center">#${product.productId}</td>
                                                    <td>
                                                        <div class="d-flex align-items-center">
                                                            <img src="/assets/images/products/${product.imgName}" class="avatar avatar-sm me-3" alt="product">
                                                            <span>${product.productName}</span>
                                                        </div>
                                                    </td>
                                                    <td class="text-center">${product.price}</td>
                                                    <td class="text-center">${product.stock}</td>
                                                    <td class="text-center">
                                                                                                     <input type="checkbox" class="select-product" ${selectedProducts.includes(product.productId) ? 'checked' : ''} data-product-id="${product.productId}" />
                                                    </td>
                                                </tr>
                                            `);
                });

                // Render phân trang
                renderPagination(filteredProducts.length);
            }

            // Hàm render phân trang
            function renderPagination(totalItems) {
                let totalPages = Math.ceil(totalItems / itemsPerPage);
                let paginationControls = $("#paginationControls");
                paginationControls.empty();

                for (let i = 1; i <= totalPages; i++) {
                    paginationControls.append(`
                                                <li class="page-item ${i === currentPage ? 'active' : ''}">
                                                    <a class="page-link" href="#" data-page="${i}">${i}</a>
                                                </li>
                                            `);
                }
            }

            // Tìm kiếm sản phẩm
            $("#productSearch").on("change", function () {
                currentPage = 1; // Reset về trang đầu khi tìm kiếm
                renderProducts();
            });

            // Thay đổi trang
            $("#paginationControls").on("click", "a", function (e) {
                e.preventDefault();
                currentPage = $(this).data("page");
                renderProducts();
            });

            // Xử lý chọn sản phẩm khi nhấn vào checkbox
            $("#productTable").on("change", ".select-product", function () {
                let productId = $(this).data("product-id");

                // Nếu checkbox được chọn, thêm vào danh sách
                if ($(this).is(":checked")) {
                    if (!selectedProducts.includes(productId)) {
                        selectedProducts.push(productId);
                    }
                } else {
                    // Nếu bỏ chọn, xóa khỏi danh sách
                    selectedProducts = selectedProducts.filter(id => id !== productId);
                }

                console.log("Selected products: ", selectedProducts);
            });

            // Xử lý khi người dùng xác nhận chọn sản phẩm
            $("#confirmSelection").on("click", function () {
                // Xử lý các sản phẩm đã chọn, ví dụ: thêm vào danh sách voucher
                const selectedProductsJson = JSON.stringify(selectedProducts);

                // Gán chuỗi JSON vào input ẩn trong form
                $("#ProductId").val(selectedProductsJson);

                // Đóng modal sau khi xác nhận
                $("#productSelectionModal").modal('hide');
            });

            // Render sản phẩm lần đầu tiên
            renderProducts();
        });

    </script>
}
