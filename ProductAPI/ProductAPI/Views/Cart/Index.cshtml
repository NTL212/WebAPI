@model List<ProductDataAccess.Models.CartItem>
@{
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<main class="main">
	<div class="page-header text-center" style="background-image: url('assets/images/page-header-bg.jpg')">
		<div class="container">
			<h1 class="page-title">Shopping Cart<span>Shop</span></h1>
		</div><!-- End .container -->
	</div><!-- End .page-header -->
	<nav aria-label="breadcrumb" class="breadcrumb-nav">
		<div class="container">
			<ol class="breadcrumb">
				<li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
				<li class="breadcrumb-item"><a href="@Url.Action("Shop", "Product")">Shop</a></li>
				<li class="breadcrumb-item active" aria-current="page">Shopping Cart</li>
			</ol>
		</div><!-- End .container -->
	</nav><!-- End .breadcrumb-nav -->
	<div class="page-content">
		<div class="cart">
			<div class="container">
				<div class="row">
					<div class="col-lg-9">
						<table class="table table-cart table-mobile">
							<thead>
								<tr>
									<th>Product</th>
									<th>Price</th>
									<th>Quantity</th>
									<th>Total</th>
									<th></th>
								</tr>
							</thead>

							<tbody>
								@foreach (var item in Model)
								{
									<tr>
										<td class="product-col">
											<div class="product">
												<figure class="product-media">
													<a href="#">
														<img src="/assets/images/products/@item.Product.ImgName" alt="Product image">
													</a>
												</figure>

												<h3 class="product-title">
													<a href="#">@item.Product.ProductName</a>
												</h3><!-- End .product-title -->
											</div><!-- End .product -->
										</td>
										<td class="price-col">$@item.Price</td>
										<td class="quantity-col">
											<div class="cart-product-quantity">
												<input type="number" class="form-control" value="@item.Quantity" min="1" max="10" step="1" data-decimals="0" required data-item-id="@item.CartItemId" data-cart-id="@item.CartId" data-product-id="@item.ProductId" data-price="@item.Product.Price">
											</div><!-- End .cart-product-quantity -->
										</td>
										@{
											decimal total = @item.Price * @item.Quantity;
										}
										<td class="total-col">
											$@total
										</td>
										<td class="remove-col">
											<button class="btn-remove" data-product-id="@item.ProductId">
												<i class="icon-close"></i>
											</button>
										</td>
									</tr>
								}

							</tbody>
						</table><!-- End .table table-wishlist -->

					</div><!-- End .col-lg-9 -->
					<aside class="col-lg-3">
						<div class="summary summary-cart">
							<h3 class="summary-title">Cart Total</h3><!-- End .summary-title -->

							<table class="table table-summary">
								<tbody>
									<tr class="summary-subtotal">
										<td>Subtotal:</td>
										<td>$160.00</td>
									</tr><!-- End .summary-subtotal -->
								

									
									<tr class="summary-total">
										<td>Total:</td>
										<td>$160.00</td>
									</tr><!-- End .summary-total -->
								</tbody>
							</table><!-- End .table table-summary -->

							<a id="checkoutButton" href="@Url.Action("Checkout", "ShoppingCart", new {id = Context.Session.GetInt32("UserId")})" class="btn btn-outline-primary-2 btn-order btn-block">PROCEED TO CHECKOUT</a>

						</div><!-- End .summary -->

						<a href="@Url.Action("Shop", "Product")" class="btn btn-outline-dark-2 btn-block mb-3"><span>CONTINUE SHOPPING</span><i class="icon-refresh"></i></a>
					</aside><!-- End .col-lg-3 -->
				</div><!-- End .row -->
			</div><!-- End .container -->
		</div><!-- End .cart -->
	</div><!-- End .page-content -->
</main><!-- End .main -->
@section scripts {

	<script>
		$(document).ready(function () {
			$('#checkoutButton').on('click', function (e) {
				e.preventDefault(); // Chặn hành động mặc định của liên kết

				// Kiểm tra nếu session hoặc token tồn tại trong localStorage
				var authToken = localStorage.getItem('authToken');
				var userId = '@Context.Session.GetInt32("UserId")';

				if (authToken || userId) {
					// Nếu có session, chuyển hướng tới trang giỏ hàng
					const urlWithToken = `/Cart/CheckoutAllCart`;
					window.location.href = urlWithToken;
				} else {
					// Nếu không có session, hiển thị thông báo và điều hướng tới trang đăng nhập
					Swal.fire({
						icon: 'warning',
						title: 'Please log in',
						text: 'You need to log in to access your cart.',
						showConfirmButton: true
					}).then(() => {
						// Nếu không có session, mở modal đăng nhập
						$('#signin-modal').modal('show');
					});
				}
			});
		});
	</script>

	<script>
		function updateCartTotal() {
			let subtotal = 0;
			$('.total-col').each(function () {
				let total = parseFloat($(this).text().replace('$', '')) || 0;
				subtotal += total;
			});
			$('.summary-subtotal td:last-child').text('$' + subtotal.toFixed(2));
			$('.summary-total td:last-child').text('$' + subtotal.toFixed(2)); // Update Total nếu cần
		}
	</script>
	<script>
		$(document).ready(function () {
			updateCartTotal();
			// Khi người dùng nhấn nút xóa sản phẩm trong giỏ hàng
			$('.btn-remove').on('click', function () {
				var productId = $(this).data('product-id'); // Lấy CartId từ data-cart-id

				// Lấy token từ localStorage (nếu có)
				var token = localStorage.getItem('authToken');

				// Gửi yêu cầu API để xóa mục trong giỏ hàng
				$.ajax({
					url: `/Cart/RemoveFromCart?productId=${productId}`, // Đường dẫn API
					type: 'POST',
					headers: {
						'Authorization': 'Bearer ' + token, // Bearer token
						'Content-Type': 'application/json'
					},
					success: function (response) {
						// Xóa sản phẩm khỏi giao diện sau khi xóa thành công
						$('tr').has('[data-product-id="' + productId + '"]').remove();
						updateCartTotal()
						console.log('Item removed successfully!');
					},
					error: function (error) {
						console.log('Error removing item!');
					}
				});
			});
		});
	</script>
	<script>
		$(document).ready(function () {

			

			// Khi người dùng thay đổi số lượng sản phẩm
			$('.cart-product-quantity input').on('change', function () {
				var quantity = $(this).val(); // Lấy số lượng mới từ input
				if(quantity==""){
					Swal.fire({
						icon: 'error',
						title: 'Update Failed',
						text: "Please enter correct quantity",
						confirmButtonText: 'Try Again'
					}).then(() => {
						location.reload()
					});
				}
				else{
					var itemId = String($(this).data('item-id')); // Lấy ID sản phẩm từ data-product-id
					var cartId = String($(this).data('cart-id')); // Lấy cartId từ một phần tử input hoặc từ URL
					var productId = String($(this).data('product-id'));
					var price = $(this).data('price');



					// Lấy token từ localStorage (nếu có)
					var token = localStorage.getItem('authToken');

					// Tạo đối tượng dữ liệu cho CartItemDTO

					$.ajax({
						url: `/Cart/UpdateCartItem?productId=${productId}&&quantity=${quantity}`, // Đường dẫn API
						type: 'POST',
						headers: {
							'Authorization': 'Bearer ' + token, // Bearer token
							'Content-Type': 'application/json'
						},
						success: function (response) {
							var newTotal = (price * quantity).toFixed(2); // Tính lại tổng tiền
							$('.total-col').each(function () {
								if ($(this).closest('tr').find('[data-product-id="' + productId + '"]').length) {
									$(this).text('$' + newTotal); // Cập nhật giá trị tổng cho dòng sản phẩm tương ứng
								}
							});
							updateCartTotal();
							console.log(response);
						},
						error: function (error) {
							Swal.fire({
								icon: 'error',
								title: 'Update Failed',
								text: "Insufficient product quantity",
								confirmButtonText: 'Try Again'
							}).then(() => {
								location.reload()
							});
							console.log('Error updating cart!');
						}
					});
				}
				
			});
		});

	</script>
}