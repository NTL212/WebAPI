// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/notification.proto
// </auto-generated>
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

public static partial class NotificationService
{
  static readonly string __ServiceName = "NotificationService";

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (message is global::Google.Protobuf.IBufferMessage)
    {
      context.SetPayloadLength(message.CalculateSize());
      global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
      context.Complete();
      return;
    }
    #endif
    context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static class __Helper_MessageCache<T>
  {
    public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
  {
    #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
    if (__Helper_MessageCache<T>.IsBufferMessage)
    {
      return parser.ParseFrom(context.PayloadAsReadOnlySequence());
    }
    #endif
    return parser.ParseFrom(context.PayloadAsNewBuffer());
  }

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Empty> __Marshaller_Empty = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Empty.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NotifyList> __Marshaller_NotifyList = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NotifyList.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::IdRequest> __Marshaller_IdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::IdRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NoticeIdRequest> __Marshaller_NoticeIdRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoticeIdRequest.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::Notice> __Marshaller_Notice = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Notice.Parser));
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Marshaller<global::NoticeResponse> __Marshaller_NoticeResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::NoticeResponse.Parser));

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Empty, global::NotifyList> __Method_GetNotifyList = new grpc::Method<global::Empty, global::NotifyList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetNotifyList",
      __Marshaller_Empty,
      __Marshaller_NotifyList);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IdRequest, global::NotifyList> __Method_GetNotifyByUserList = new grpc::Method<global::IdRequest, global::NotifyList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetNotifyByUserList",
      __Marshaller_IdRequest,
      __Marshaller_NotifyList);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::IdRequest, global::NotifyList> __Method_GetNotifyByOrderList = new grpc::Method<global::IdRequest, global::NotifyList>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetNotifyByOrderList",
      __Marshaller_IdRequest,
      __Marshaller_NotifyList);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NoticeIdRequest, global::Notice> __Method_GetNoticeById = new grpc::Method<global::NoticeIdRequest, global::Notice>(
      grpc::MethodType.Unary,
      __ServiceName,
      "GetNoticeById",
      __Marshaller_NoticeIdRequest,
      __Marshaller_Notice);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Notice, global::NoticeResponse> __Method_AddNotice = new grpc::Method<global::Notice, global::NoticeResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "AddNotice",
      __Marshaller_Notice,
      __Marshaller_NoticeResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::Notice, global::NoticeResponse> __Method_UpdateNotice = new grpc::Method<global::Notice, global::NoticeResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateNotice",
      __Marshaller_Notice,
      __Marshaller_NoticeResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NoticeIdRequest, global::NoticeResponse> __Method_UpdateNoticeIsSeen = new grpc::Method<global::NoticeIdRequest, global::NoticeResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "UpdateNoticeIsSeen",
      __Marshaller_NoticeIdRequest,
      __Marshaller_NoticeResponse);

  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  static readonly grpc::Method<global::NoticeIdRequest, global::NoticeResponse> __Method_DeleteNotice = new grpc::Method<global::NoticeIdRequest, global::NoticeResponse>(
      grpc::MethodType.Unary,
      __ServiceName,
      "DeleteNotice",
      __Marshaller_NoticeIdRequest,
      __Marshaller_NoticeResponse);

  /// <summary>Service descriptor</summary>
  public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
  {
    get { return global::NotificationReflection.Descriptor.Services[0]; }
  }

  /// <summary>Base class for server-side implementations of NotificationService</summary>
  [grpc::BindServiceMethod(typeof(NotificationService), "BindService")]
  public abstract partial class NotificationServiceBase
  {
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NotifyList> GetNotifyList(global::Empty request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NotifyList> GetNotifyByUserList(global::IdRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NotifyList> GetNotifyByOrderList(global::IdRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::Notice> GetNoticeById(global::NoticeIdRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NoticeResponse> AddNotice(global::Notice request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NoticeResponse> UpdateNotice(global::Notice request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NoticeResponse> UpdateNoticeIsSeen(global::NoticeIdRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public virtual global::System.Threading.Tasks.Task<global::NoticeResponse> DeleteNotice(global::NoticeIdRequest request, grpc::ServerCallContext context)
    {
      throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
    }

  }

  /// <summary>Creates service definition that can be registered with a server</summary>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static grpc::ServerServiceDefinition BindService(NotificationServiceBase serviceImpl)
  {
    return grpc::ServerServiceDefinition.CreateBuilder()
        .AddMethod(__Method_GetNotifyList, serviceImpl.GetNotifyList)
        .AddMethod(__Method_GetNotifyByUserList, serviceImpl.GetNotifyByUserList)
        .AddMethod(__Method_GetNotifyByOrderList, serviceImpl.GetNotifyByOrderList)
        .AddMethod(__Method_GetNoticeById, serviceImpl.GetNoticeById)
        .AddMethod(__Method_AddNotice, serviceImpl.AddNotice)
        .AddMethod(__Method_UpdateNotice, serviceImpl.UpdateNotice)
        .AddMethod(__Method_UpdateNoticeIsSeen, serviceImpl.UpdateNoticeIsSeen)
        .AddMethod(__Method_DeleteNotice, serviceImpl.DeleteNotice).Build();
  }

  /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
  /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
  /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
  /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
  [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
  public static void BindService(grpc::ServiceBinderBase serviceBinder, NotificationServiceBase serviceImpl)
  {
    serviceBinder.AddMethod(__Method_GetNotifyList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Empty, global::NotifyList>(serviceImpl.GetNotifyList));
    serviceBinder.AddMethod(__Method_GetNotifyByUserList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IdRequest, global::NotifyList>(serviceImpl.GetNotifyByUserList));
    serviceBinder.AddMethod(__Method_GetNotifyByOrderList, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IdRequest, global::NotifyList>(serviceImpl.GetNotifyByOrderList));
    serviceBinder.AddMethod(__Method_GetNoticeById, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoticeIdRequest, global::Notice>(serviceImpl.GetNoticeById));
    serviceBinder.AddMethod(__Method_AddNotice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Notice, global::NoticeResponse>(serviceImpl.AddNotice));
    serviceBinder.AddMethod(__Method_UpdateNotice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Notice, global::NoticeResponse>(serviceImpl.UpdateNotice));
    serviceBinder.AddMethod(__Method_UpdateNoticeIsSeen, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoticeIdRequest, global::NoticeResponse>(serviceImpl.UpdateNoticeIsSeen));
    serviceBinder.AddMethod(__Method_DeleteNotice, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::NoticeIdRequest, global::NoticeResponse>(serviceImpl.DeleteNotice));
  }

}
#endregion
